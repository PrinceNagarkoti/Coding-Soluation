/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        ListNode curr=head;
        int l=0;
        while(curr!=null){
            l++;
            curr=curr.next;
        }
        int bkNodes=l/k;
        int extNodes=l%k;
        ListNode [] result=new ListNode[k];
        curr=head;
        ListNode prev=null;
        for(int i=0; curr!=null&& i<k; i++){
            result[i]=curr;
            for(int count=1; count<=bkNodes+(extNodes>0 ? 1:0); count++){
                prev=curr;
                curr=curr.next;

            }
            if(prev!=null){
                prev.next=null;
            }
            extNodes--;
        }
        return result;
    }
}