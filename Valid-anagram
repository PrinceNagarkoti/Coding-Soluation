class Solution {
    public boolean isAnagram(String s, String t) {
        if (s.length() != t.length()) {
            return false;
        }
        HashMap<Character, Integer> map = new HashMap<>();
        for (char a : s.toCharArray()) {
            if (map.containsKey(a)) {
                map.put(a, map.get(a) + 1);
            } else {
                map.put(a, 1);
            }
        }
        for (char b : t.toCharArray()) {
            if (!map.containsKey(b)) {
                return false;
            }
            int count = map.get(b);
            if (count > 0) {
                map.put(b, count - 1);
            } else {
                return false;
            }
        }
        return true;
    }
}

//optimization
class Solution {
    public boolean isAnagram(String s, String t) {
        if (s.length() != t.length()) {
            return false;
        }
        
        int[] charCount = new int[256];
        
        for (int i = 0; i < s.length(); i++) {
            charCount[s.charAt(i)]++;
            charCount[t.charAt(i)]--;
        }
        
        for (int count : charCount) {
            if (count != 0) {
                return false;
            }
        }
        
        return true;
    }
}
