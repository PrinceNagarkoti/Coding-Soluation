class Solution {
    public String fractionAddition(String expr) {
        int num = 0;
        int den = 1;

        int i = 0;
        int len = expr.length();
        while (i < len) {
            int currNum = 0;
            int currDen = 0;

            boolean neg = (expr.charAt(i) == '-');
            if (expr.charAt(i) == '+' || expr.charAt(i) == '-') {
                i++;
            }

            while (i < len && Character.isDigit(expr.charAt(i))) {
                int digit = expr.charAt(i) - '0';
                currNum = (currNum * 10) + digit;
                i++;
            }
            i++;
            if (neg) {
                currNum *= -1;
            }
            while (i < len && Character.isDigit(expr.charAt(i))) {
                int digit = expr.charAt(i) - '0';
                currDen = (currDen * 10) + digit;
                i++;
            }

            num = num * currDen + currNum * den;
            den = den * currDen;
        }

        int gcdVal = gcd(Math.abs(num), den);

        num /= gcdVal;
        den /= gcdVal;
        return num + "/" + den;
    }

    private int gcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }
}