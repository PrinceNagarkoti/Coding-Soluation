/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private int idx=0;
    private TreeNode solve(int[] preorder, int[] inorder,int start, int end){
        if(end<start)return null;
        int treeRoot=preorder[idx++];
        TreeNode root=new TreeNode(treeRoot);
        int i=start;
        while(i<=end){
            if(inorder[i]==treeRoot){
                break;
            }
            i++;
        }
        root.left=solve(preorder, inorder, start,i-1);
        root.right=solve(preorder, inorder,i+1,end);
        return root;
    }
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return solve(preorder,inorder,0,inorder.length-1);
    }

}